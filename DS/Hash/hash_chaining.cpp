#include<bits/stdc++.h>
#define int long long
#define eb emplace_back
using namespace std;

const int N=1000000, table_size=59;

int arr[25]={10102109, 10106402, 10106918, 12508729, 12508629, 12508765, 12508068, 12508705, 12508842, 11508011, 11508817, 11508388, 11508189, 11508331, 11508675, 11508521, 11508287, 11508863, 11508979, 11508532, 11508035, 11508599, 10613285, 13945978, 12945157};

vector<int> hash_table[table_size];

int32_t main(){
    for(int i=0;i<25;++i){
        int id=((arr[i]*arr[i]/N)%N)%table_size;
        hash_table[id].eb(arr[i]);
    }

    for(int i=0;i<table_size;++i){
        cout<<i<<":"<<hash_table[i].size()<<'\n';
    }


    /* the code below is generated by Chat GPT */
    int total = 0, collisions = 0;
    int max_bucket = 0;
    double mean = 0, std = 0;
    
    for(int i=0;i<table_size;++i){
        int sz = hash_table[i].size();
        total += sz;
        if(sz > 1) collisions += sz - 1;
        max_bucket = max(max_bucket, sz);
        mean += sz;
        std += sz * sz;
    }
    mean /= table_size;
    std = sqrt(std / table_size - mean * mean);
    
    cout << "\n Hash 分析結果：\n";
    cout << "元素總數: " << total << '\n';
    cout << "碰撞次數: " << collisions << '\n';
    cout << "最大桶長度: " << max_bucket << '\n';
    cout << "平均每桶元素數: " << fixed << setprecision(2) << mean << '\n';
    cout << "標準差: " << fixed << setprecision(2) << std << '\n';
    
}